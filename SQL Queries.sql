-- List all customers from "New York"
SELECT * FROM customers WHERE CITY="NEW YORK";

-- Find the total number of orders placed by each customer, ordered from highest to lowest
SELECT c.customer_name, COUNT(o.order_id) AS total_orders
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_name
ORDER BY total_orders DESC;

-- Show order details with customer name, product name, and quantity
SELECT CUSTOMER_NAME, PRODUCT_NAME , QUANTITY FROM orders AS O INNER JOIN customers C ON O.customer_id=C.customer_id
INNER join order_details OD ON OD.order_id=O.order_id 
INNER JOIN products P ON OD.product_id=P.product_id;

-- Show all customers and their orders, including those who have not placed any orders.
SELECT c.customer_name, o.order_id
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id;

--  Find customers who have spent more than 1000 in total purchases.
SELECT customer_name
FROM customers
WHERE customer_id IN (
    SELECT o.customer_id
    FROM orders o
    JOIN order_details od ON o.order_id = od.order_id
    JOIN products p ON od.product_id = p.product_id
    GROUP BY o.customer_id
    HAVING SUM(p.price * od.quantity) > 1000
);

-- Show the total revenue generated by each product
SELECT p.product_name, SUM(p.price * od.quantity) AS total_revenue
FROM products p
JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_name
ORDER BY total_revenue DESC;

-- Find the average value of all orders
SELECT AVG(order_total) AS avg_order_value
FROM (
    SELECT o.order_id, SUM(p.price * od.quantity) AS order_total
    FROM orders o
    JOIN order_details od ON o.order_id = od.order_id
    JOIN products p ON od.product_id = p.product_id
    GROUP BY o.order_id
) AS sub;

-- Create a view to show total orders and spending per customer
CREATE VIEW customer_order_summary AS
SELECT c.customer_name, COUNT(o.order_id) AS total_orders, SUM(p.price * od.quantity) AS total_spent
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
JOIN products p ON od.product_id = p.product_id
GROUP BY c.customer_name;

-- Select from the view
SELECT * FROM customer_order_summary;

-- Improve query performance with indexes.
CREATE INDEX idx_customer_id ON orders(customer_id);
CREATE INDEX idx_product_id ON order_details(product_id);

